<?php
/*
/**
* Phxsolution Formbuilder
*
* NOTICE OF LICENSE
*
* This source file is subject to the Open Software License (OSL 3.0)
* that is bundled with this package in the file LICENSE.txt.
* It is also available through the world-wide-web at this URL:
* http://opensource.org/licenses/osl-3.0.php
* If you did not receive a copy of the license and are unable to
* obtain it through the world-wide-web, please send an email
* to license@magentocommerce.com so you can be sent a copy immediately.
*
* Original code copyright (c) 2008 Irubin Consulting Inc. DBA Varien
*
* @category   frontend template
* @package    Phxsolution_Formbuilder
* @author     Murad Ali
* @contact    contact@phxsolution.com
* @site       www.phxsolution.com
* @copyright  Copyright (c) 2014 Phxsolution Formbuilder
* @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
*/
?>
<?php
$formIdfromCms = $this->getFormId();
$formIdfromUrl = $this->getRequest()->getParam('id');
$passFormId = $formIdfromCms ? $formIdfromCms : $formIdfromUrl;

$helper = Mage::helper('formbuilder');
$session = Mage::getSingleton('core/session');
if ($helper->isEnabled()): ?>
	<div class="formbuilder">
		<?php echo $this->getMessagesBlock()->getGroupedHtml(); ?>
		<div class="formbuilder-form">
		<?php
			//$passFormId = intval($this->getRequest()->getParam('id'));
			$currentForm = $currentFormFieldsCollection = array();
			$currentForm = $this->getCurrentFormUsingBlock($passFormId);
			if(isset($currentForm) && $currentForm!=NULL): 
				$currentFormFieldsCollection = $this->getCurrentFormFields($passFormId);
				if(count($currentFormFieldsCollection)):
					$currentFormId = $currentForm['forms_index'];
					$formBgcolor = $currentForm['bgcolor'];
					$formRedirectUrl = Mage::getUrl('formbuilder/index/formsubmit');
					$submitButtonText = $currentForm['submit_text'];
					if(!$submitButtonText)
						$submitButtonText = $this->__("Submit");
					?>
					<?php //echo $this->getLayout()->createBlock('core/template')->setTemplate('formbuilder/fields_validation.phtml')->toHtml(); ?>
					<script type="text/javascript">
					function validateOptionsCallback(elmId, result)
					{
				        var container = $(elmId).up('ul.options-list');
				        if (result == 'failed') {
				            container.removeClassName('validation-passed');
				            container.addClassName('validation-failed');
				        } else {
				            container.removeClassName('validation-failed');
				            container.addClassName('validation-passed');
				        }
				    }
				    </script>			    
					<form method="post" id="custom_form" action="<?php echo $formRedirectUrl ?>" name="custom_form" enctype="multipart/form-data">
					    <div class="fieldset">
					        <h1 class="legend"><nobr><?php echo $currentForm->getTitle(); ?></nobr>
					        </h1>
					        <?php if($currentForm['header_content']): ?>
								<div class="header_content">
								    <?php echo $currentForm['header_content']; ?>
								</div>
							<?php endif; ?>
					        <ul class="form-list product-options">
					        	<?php
					        		foreach ($currentFormFieldsCollection as $key => $field)
					        		{
					        			
				        				$fieldType = 'text';
				        				switch ($field['type']) {
				        					case 'field':
				        					case 'area':
				        						$fieldType = 'text';				        					
				        						break;
				        					case "drop_down":
				        					case "radio":
				        					case "checkbox":
				        					case "multiple":
				        						$fieldType = 'select';				        					
				        						break;
				        					case "file":
				        						$fieldType = 'file';				        					
				        						break;

				        					default:
				        						# code...
				        						break;
				        				}

										$functionName = "get".ucfirst($fieldType)."Html";
					        			echo $this->$functionName($field);
					        		}
								?>
					        </ul>
					        <?php if($currentForm['footer_content']): ?>
								<div class="footer_content">
								    <?php echo $currentForm['footer_content']; ?>
								</div>
							<?php endif; ?>
					    </div>
					    <div class="buttons-set">
					        <input type="hidden" name="current_form_id" id="current_form_id" value="<?php echo $currentFormId ?>">
					        <button class="btn btn-success-white" title="<?php echo $this->__($submitButtonText) ?>" type="submit"><span><span><?php echo $this->__($submitButtonText) ?></span></span></button>
					    </div>
					</form>				
					<script type="text/javascript">
						var myForm = new VarienForm('custom_form');
					</script>
					<style type="text/css">
						<?php
							$formStyle = "#custom_form .fieldset, #custom_form .form-list {background-color: ".$formBgcolor."}";
							echo $formStyle;
						?>
					</style>
				<?php else: ?>
					<p class="note-msg"><?php echo $this->__('There are no fields enabled/available in the requested form.') ?></p>
				<?php endif; ?><!--if(count($currentFormFieldsCollection))-->
			<?php endif; ?><!--if(isset($currentForm))-->
		</div><!--formbuilder-form-->
	</div><!--formbuilder-->
<?php endif; ?>	
